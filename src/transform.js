const _replace = require('lodash/replace')
const _forEach = require('lodash/forEach')
const propertyPattern = '=(?:\'|")([^"\']*)(?:\'|")'

// For all implemented React attributes see
// https://github.com/facebook/react/blob/master/src/renderers/dom/shared/SVGDOMPropertyConfig.js
const transforms = {
  'class': 'className',
  'accent-height': 'accentHeight',
  'alignment-baseline': 'alignmentBaseline',
  'allowReorder': 'allowReorder',
  'arabic-form': 'arabicForm',
  'attributeName': 'attributeName',
  'attributeType': 'attributeType',
  'autoReverse': 'autoReverse',
  'baseFrequency': 'baseFrequency',
  'baseProfile': 'baseProfile',
  'baseline-shift': 'baselineShift',
  'calcMode': 'calcMode',
  'cap-height': 'capHeight',
  'clip-path': 'clipPath',
  'clip-rule': 'clipRule',
  'clipPathUnits': 'clipPathUnits',
  'color-interpolation': 'colorInterpolation',
  'color-interpolation-filters': 'colorInterpolationFilters',
  'color-profile': 'colorProfile',
  'color-rendering': 'colorRendering',
  'contentScriptType': 'contentScriptType',
  'contentStyleType': 'contentStyleType',
  'diffuseConstant': 'diffuseConstant',
  'dominant-baseline': 'dominantBaseline',
  'edgeMode': 'edgeMode',
  'enable-background': 'enableBackground',
  'externalResourcesRequired': 'externalResourcesRequired',
  'fill-opacity': 'fillOpacity',
  'fill-rule': 'fillRule',
  'filterRes': 'filterRes',
  'filterUnits': 'filterUnits',
  'flood-color': 'floodColor',
  'flood-opacity': 'floodOpacity',
  'font-family': 'fontFamily',
  'font-size': 'fontSize',
  'font-size-adjust': 'fontSizeAdjust',
  'font-stretch': 'fontStretch',
  'font-style': 'fontStyle',
  'font-variant': 'fontVariant',
  'font-weight': 'fontWeight',
  'glyph-name': 'glyphName',
  'glyph-orientation-horizontal': 'glyphOrientationHorizontal',
  'glyph-orientation-vertical': 'glyphOrientationVertical',
  'glyphRef': 'glyphRef',
  'gradientTransform': 'gradientTransform',
  'gradientUnits': 'gradientUnits',
  'horiz-adv-x': 'horizAdvX',
  'horiz-origin-x': 'horizOriginX',
  'image-rendering': 'imageRendering',
  'kernelMatrix': 'kernelMatrix',
  'kernelUnitLength': 'kernelUnitLength',
  'keyPoints': 'keyPoints',
  'keySplines': 'keySplines',
  'keyTimes': 'keyTimes',
  'lengthAdjust': 'lengthAdjust',
  'letter-spacing': 'letterSpacing',
  'lighting-color': 'lightingColor',
  'limitingConeAngle': 'limitingConeAngle',
  'marker-end': 'markerEnd',
  'marker-mid': 'markerMid',
  'marker-start': 'markerStart',
  'markerHeight': 'markerHeight',
  'markerUnits': 'markerUnits',
  'markerWidth': 'markerWidth',
  'maskContentUnits': 'maskContentUnits',
  'maskUnits': 'maskUnits',
  'numOctaves': 'numOctaves',
  'overline-position': 'overlinePosition',
  'overline-thickness': 'overlineThickness',
  'paint-order': 'paintOrder',
  'panose-1': 'panose1',
  'pathLength': 'pathLength',
  'patternContentUnits': 'patternContentUnits',
  'patternTransform': 'patternTransform',
  'patternUnits': 'patternUnits',
  'pointer-events': 'pointerEvents',
  'pointsAtX': 'pointsAtX',
  'pointsAtY': 'pointsAtY',
  'pointsAtZ': 'pointsAtZ',
  'preserveAlpha': 'preserveAlpha',
  'preserveAspectRatio': 'preserveAspectRatio',
  'primitiveUnits': 'primitiveUnits',
  'refX': 'refX',
  'refY': 'refY',
  'rendering-intent': 'renderingIntent',
  'repeatCount': 'repeatCount',
  'repeatDur': 'repeatDur',
  'requiredExtensions': 'requiredExtensions',
  'requiredFeatures': 'requiredFeatures',
  'shape-rendering': 'shapeRendering',
  'specularConstant': 'specularConstant',
  'specularExponent': 'specularExponent',
  'spreadMethod': 'spreadMethod',
  'startOffset': 'startOffset',
  'stdDeviation': 'stdDeviation',
  'stitchTiles': 'stitchTiles',
  'stop-color': 'stopColor',
  'stop-opacity': 'stopOpacity',
  'strikethrough-position': 'strikethroughPosition',
  'strikethrough-thickness': 'strikethroughThickness',
  'stroke-dasharray': 'strokeDasharray',
  'stroke-dashoffset': 'strokeDashoffset',
  'stroke-linecap': 'strokeLinecap',
  'stroke-linejoin': 'strokeLinejoin',
  'stroke-miterlimit': 'strokeMiterlimit',
  'stroke-opacity': 'strokeOpacity',
  'stroke-width': 'strokeWidth',
  'surfaceScale': 'surfaceScale',
  'systemLanguage': 'systemLanguage',
  'tableValues': 'tableValues',
  'targetX': 'targetX',
  'targetY': 'targetY',
  'text-anchor': 'textAnchor',
  'text-decoration': 'textDecoration',
  'text-rendering': 'textRendering',
  'textLength': 'textLength',
  'underline-position': 'underlinePosition',
  'underline-thickness': 'underlineThickness',
  'unicode-bidi': 'unicodeBidi',
  'unicode-range': 'unicodeRange',
  'units-per-em': 'unitsPerEm',
  'v-alphabetic': 'vAlphabetic',
  'v-hanging': 'vHanging',
  'v-ideographic': 'vIdeographic',
  'v-mathematical': 'vMathematical',
  'vector-effect': 'vectorEffect',
  'vert-adv-y': 'vertAdvY',
  'vert-origin-x': 'vertOriginX',
  'vert-origin-y': 'vertOriginY',
  'viewBox': 'viewBox',
  'viewTarget': 'viewTarget',
  'word-spacing': 'wordSpacing',
  'writing-mode': 'writingMode',
  'x-height': 'xHeight',
  'xChannelSelector': 'xChannelSelector',
  'xlink:actuate': 'xlinkActuate',
  'xlink:arcrole': 'xlinkArcrole',
  'xlink:href': 'xlinkHref',
  'xlink:role': 'xlinkRole',
  'xlink:show': 'xlinkShow',
  'xlink:title': 'xlinkTitle',
  'xlink:type': 'xlinkType',
  'xml:base': 'xmlBase',
  'xmlns:xlink': 'xmlnsXlink',
  'xml:lang': 'xmlLang',
  'xml:space': 'xmlSpace',
  'yChannelSelector': 'yChannelSelector',
  'zoomAndPan': 'zoomAndPan'
}

function transform (content) {
  _forEach(transforms, (transformValue, transformKey) => {
    const regex = new RegExp(`${transformKey}${propertyPattern}`, 'gim')
    content = _replace(content, regex, (match, property) => {
      return `${transformValue}="${property}"`
    })
  })
  return content
}

module.exports = transform
